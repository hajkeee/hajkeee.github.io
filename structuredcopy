<script>
  window.addEventListener('DOMContentLoaded', function () {
    const event = window.dataLayer.find(e => e.event === 'Purchase');
    if (event) {
      const clone = structuredClone(event);
      sessionStorage.setItem('purchaseData', JSON.stringify(clone));
    }
  });
</script>

v2
<script>
  window.addEventListener('DOMContentLoaded', function () {
    var purchase;
    for (var i = 0; i < dataLayer.length; i++) {
      if (dataLayer[i].event === 'purchase') {
        purchase = dataLayer[i];
        break;
      }
    }

    if (purchase) {
      try {
        var cloned = JSON.parse(JSON.stringify(purchase));
        sessionStorage.setItem('purchaseData', JSON.stringify(cloned));
      } catch (e) {
        console.error('Error saving purchase:', e);
      }
    }
  });
</script>

v3

<script>
  window.dataLayer = window.dataLayer || [];
  window.dataLayer.forEach(function(item) {
    if (item.event === 'purchase' && item.ecommerce) {
      try {
        // Використовуємо structuredClone для глибокого копіювання об'єкта ecommerce
        const purchaseData = structuredClone(item.ecommerce);
        sessionStorage.setItem('gtm_purchaseData', JSON.stringify(purchaseData));
        console.log('Purchase data saved to sessionStorage:', purchaseData);
      } catch (e) {
        console.error('Error saving purchase data:', e);
      }
    }
  });
</script>








Restore Purchase Event from SessionStorage

<script>
  window.addEventListener('DOMContentLoaded', function () {
    if (!sessionStorage.getItem('purchaseData') || sessionStorage.getItem('purchaseTransferred')) {
      return;
    }

    try {
      const purchase = JSON.parse(sessionStorage.getItem('purchaseData'));
      if (purchase) {
        window.dataLayer = window.dataLayer || [];
        window.dataLayer.push(purchase);
        sessionStorage.setItem('purchaseTransferred', 'true'); 
      }
    } catch (e) {
      console.error('Failed to restore purchase', e);
    }
  });
</script>

v2
<script>
  window.addEventListener('DOMContentLoaded', function () {
    if (sessionStorage.getItem('purchaseTransferred')) return;

    try {
      var stored = sessionStorage.getItem('purchaseData');
      if (stored) {
        var purchase = JSON.parse(stored);
        window.dataLayer = window.dataLayer || [];
        window.dataLayer.push(purchase);
        sessionStorage.setItem('purchaseTransferred', 'true');
      }
    } catch (e) {
      console.error('Error restoring purchase:', e);
    }
  });
</script>



v3

<script>
  window.dataLayer = window.dataLayer || [];
  const storedPurchaseData = sessionStorage.getItem('gtm_purchaseData');

  if (storedPurchaseData) {
    try {
      const purchaseData = JSON.parse(storedPurchaseData);
      // Додаємо дані покупки назад у dataLayer як нову подію
      window.dataLayer.push({
        event: 'purchase_restored', // Нова назва події, щоб відрізняти від оригінальної
        ecommerce: purchaseData,
        eventCallback: function() {
          // Очищаємо дані з sessionStorage після використання, щоб уникнути повторного спрацьовування
          sessionStorage.removeItem('gtm_purchaseData');
          console.log('Purchase data restored and pushed to dataLayer.');
        }
      });
    } catch (e) {
      console.error('Error restoring purchase data:', e);
    }
  }
</script>

