online-checkin-add-or-edit-data-button
online-checkin-add-or-edit-data-button
online-checkin-leg-tab-0|online-checkin-leg-tab-1

^online-checkin-(add-or-edit-data-button|leg-tab-\d+)$


function() {
  var className = {{Click Classes}};

  switch (className) {
    case 'online-checkin-add-or-edit-data-button':
      return 'перше значення';
    case 'online-checkin-leg-tab-0':
      return 'друге значення';
    case 'online-checkin-leg-tab-1':
      return 'третє значення';
    defaul




[...document.querySelectorAll('.ID-selectionList .ID-list-item-title')].map(e => e.innerText.trim());


https://docs.google.com/spreadsheets/d/1D3tHVRoRo2eEO56C0QxVp4F-Ohiy-usGLeZyzEBvQ4c/edit?gid=0#gid=0
^(chatgpt\.com|openai\.com|perplexity\.ai|copilot\.microsoft\.com|bard\.google\.com|gemini\.google\.com|claude\.ai|anthropic\.com)$
^(chatgpt\.com|openai\.com|perplexity\.ai|copilot\.microsoft\.com|bard\.google\.com|gemini\.google\.com|claude\.ai|anthropic\.com|chatgpt|openai|perplexity|copilot|bard|gemini|claude|anthropic)$

^https?://(chatgpt\.com|openai\.com|perplexity\.ai|copilot\.microsoft\.com|bard\.google\.com|gemini\.google\.com|claude\.ai|anthropic\.com)(/.*)?$
.*(chatgpt|openai|perplexity|copilot|bard|gemini|claude|anthropic).*
chatgpt|openai|perplexity|copilot|bard|gemini|claude|anthropic

(^|\.)(chatgpt|openai|perplexity|copilot|bard|gemini|claude|anthropic)(\.|/|$)



chatgpt.com
openai.com
perplexity.ai
copilot.microsoft.com
bard.google.com
gemini.google.com
claude.ai
anthropic.com

<script>
  (function () {

    var pageLoadTime = new Date().getTime();
    var isEventSent = false;

    // Функція для відправки часу в dataLayer
    function sendTimeSpent() {
      if (!isEventSent) {
        var currentTime = new Date().getTime();
        var timeSpent = Math.round((currentTime - pageLoadTime) / 1000); // У секундах


        window.dataLayer = window.dataLayer || [];
        window.dataLayer.push({
          'event': 'timeOnPage',
          'timeSpent': timeSpent
        });

        isEventSent = true;
      }
    }


    document.addEventListener('click', function (e) {
      var target = e.target.closest('a');
      if (target && target.href) {
        sendTimeSpent();
      }
    });

    window.addEventListener('beforeunload', sendTimeSpent);
  })();
</script>


try {
  _eas = window['_eas'] || [];

  if (!Array.isArray(_eas)) {
    throw new Error('_eas is not an array');
  }

  const event = [
    'logEvent',
    [
      'PageView',
      'FE',
      [
        ['PageLabel', 'test', 1],
        ['PageType', 'test', 1],
        ['PageCategory', 'test', 1],
        ['TimingNetworkEffectiveType', 'test', 1],
        ['TimingNetworkSaveData', 'test', 8]
      ],
      [
        ['TimingNavigationDomComplete', 'test', 1, 3],
        ['TimingNavigationDomInteractive', 'test', 1, 3],
        ['TimingNavigationDuration', 'test', 1, 3],
        ['TimingNavigationResponseEnd', 'test', 1, 3],
        ['TimingNavigationTransferSize', 'test', 1, 3],
        ['TimingNetworkDownlink', 'test', 1, 3],
        ['TimingNetworkPing', 'test', 1, 3]
      ]
    ]
  ];

  if (!Array.isArray(event) || event.length < 2) {
    throw new Error('Event format is invalid');
  }

  _eas.push(event);
  console.log('Event pushed successfully:', event);
} catch (error) {
  console.error('Error pushing event:', error.message);
}
